name: Maven Release CI

on:
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14

     
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-pay-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-pay-integration-m2
          
      - name: Maven Build and Test
        run: mvn --batch-mode --update-snapshots --no-transfer-progress -Dmaven.test.skip=true verify
      
      - name: Set repo owner and repo name in env vars
        env:
          REPO_OWNER_NAME: ${{ github.repository }}
        run: |
          REPO_OWNER=$(echo "$REPO_OWNER_NAME" | awk '$1=$1' FS="/" OFS=" " | awk '{ print $1}' | tr '[:upper:]' '[:lower:]')
          echo "REPO_OWNER=$REPO_OWNER" >> $GITHUB_ENV
          echo {{ env.REPO_OWNER }}
          REPO_NAME=$(echo "$REPO_OWNER_NAME" | awk '$1=$1' FS="/" OFS=" " | awk '{ print $2}')
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME"
      
      - name: Login to github packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set released tag in env vars
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      
      - name: build and push docker image
        run: |
          docker build -t ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/${{ env.REPO_NAME }}:${{ env.RELEASE_VERSION }} .
          docker push ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/${{ env.REPO_NAME }}:${{ env.RELEASE_VERSION }}
